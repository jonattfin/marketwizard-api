// <auto-generated />
using System;
using MarketWizard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MarketWizard.Data.Migrations
{
    [DbContext(typeof(MarketWizardContext))]
    [Migration("20250818172738_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MarketWizard.Domain.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d82dcdad-f6cc-4b94-a8ec-e26abe09e590"),
                            Description = "Description 1",
                            Name = "Asset 1",
                            Symbol = "ASML"
                        },
                        new
                        {
                            Id = new Guid("313089d6-cebc-44db-8d6d-10788c512656"),
                            Description = "Description 2",
                            Name = "Asset 2",
                            Symbol = "DECK"
                        });
                });

            modelBuilder.Entity("MarketWizard.Domain.Portfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Portfolios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("54f53f92-1043-4ca4-b32a-4db5a2d1013f"),
                            Description = "Description 1",
                            ImageUrl = "image",
                            Name = "Portfolio 1"
                        });
                });

            modelBuilder.Entity("MarketWizard.Domain.PortfolioAsset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<double>("NumberOfShares")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("uuid");

                    b.Property<double>("PricePerShare")
                        .HasColumnType("double precision");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("PortfolioAsset");
                });

            modelBuilder.Entity("MarketWizard.Domain.PortfolioNews", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Headline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PortfolioId")
                        .HasColumnType("uuid");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("PortfolioNews");
                });

            modelBuilder.Entity("MarketWizard.Domain.PortfolioAsset", b =>
                {
                    b.HasOne("MarketWizard.Domain.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketWizard.Domain.Portfolio", null)
                        .WithMany("PortfolioAssets")
                        .HasForeignKey("PortfolioId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("MarketWizard.Domain.PortfolioNews", b =>
                {
                    b.HasOne("MarketWizard.Domain.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketWizard.Domain.Portfolio", null)
                        .WithMany("PortfolioNews")
                        .HasForeignKey("PortfolioId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("MarketWizard.Domain.Portfolio", b =>
                {
                    b.Navigation("PortfolioAssets");

                    b.Navigation("PortfolioNews");
                });
#pragma warning restore 612, 618
        }
    }
}
